name: âœ¨ Criticize New Issues

on:
  issues:
    types: [opened, reopened]

permissions:
  contents: read
  issues: write

jobs:
  call-zoo:
    runs-on: ubuntu-latest
    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Get Issue Details
        id: get-issue-details
        run: |
          ISSUE_DESCRIPTION=$(jq -r '.issue.body' "$GITHUB_EVENT_PATH")
          ISSUE_TITLE=$(jq -r '.issue.title' "$GITHUB_EVENT_PATH")
          echo "ISSUE_DESCRIPTION<<EOF" >> "$GITHUB_OUTPUT"
          echo "$ISSUE_DESCRIPTION" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"
          echo "ISSUE_TITLE<<EOF" >> "$GITHUB_OUTPUT"
          echo "$ISSUE_TITLE" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Get Rating
        id: get-rating
        env:
          ZOO_API_KEY: ${{ secrets.ZOO_API_KEY }}
        run: |
          ISSUE_DESCRIPTION="${{ steps.get-issue-details.outputs.ISSUE_DESCRIPTION }}"
          THRESHOLD_VALUE=5
          RATING_PROMPT=$(printf '%s\n' \
          "Rate the clarity and detail of the following GitHub issue description from 1 to 10, where 1 is very poor and 10 is excellent. Please respond with only a single integer number between 1 and 10." \
          "" \
          "ISSUE DESCRIPTION:" \
          "$ISSUE_DESCRIPTION")
          RATING_PAYLOAD=$(jq -n --arg model "gpt-4o" --arg content "$RATING_PROMPT" --argjson stream false --argjson max_tokens 5 '{
            model: $model,
            messages: [
              {
                role: "user",
                content: $content
              }
            ],
            stream: $stream,
            max_tokens: $max_tokens
          }')
          RATING_RESPONSE=$(curl -s -X POST -H "Content-Type: application/json" -H "User-Agent: GHAction/Issue-Rating" -H "api-key: $ZOO_API_KEY" -d "$RATING_PAYLOAD" https://llm.reasoning.innovation.kognitwin.com/proxy/chat/completions)
          RATING_MESSAGE=$(echo "$RATING_RESPONSE" | jq -r '.choices[0].message.content')
          RATING_NUMBER=$(echo "$RATING_MESSAGE" | grep -Eo '^[0-9]+$')
          if ! [[ "$RATING_NUMBER" =~ ^[1-9]$|^10$ ]]; then
            echo "Failed to get a valid rating number between 1 and 10"
            exit 1
          fi
          if [ "$RATING_NUMBER" -lt "$THRESHOLD_VALUE" ]; then
            echo "proceed_to_critique=true" >> "$GITHUB_OUTPUT"
          else
            echo "proceed_to_critique=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Critique Issue
        if: steps.get-rating.outputs.proceed_to_critique == 'true'
        env:
          ZOO_API_KEY: ${{ secrets.ZOO_API_KEY }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ISSUE_DESCRIPTION="${{ steps.get-issue-details.outputs.ISSUE_DESCRIPTION }}"
          ISSUE_TITLE="${{ steps.get-issue-details.outputs.ISSUE_TITLE }}"
          PROMPT=$(printf '%s\n' \
          "Please provide a concise and short bullet-point list of things that can be improved about the following issue description." \
          "Focus on clarity, how the proposed change can provide value, and if the proposed change considers its surrounding context." \
          "" \
          "Remember what a good issue for value-driven development looks like." \
          "Think carefully about it. Make sure you don't point out things that are already clear or that are not relevant to the issue." \
          "At the end of the bullet-point list, propose an alternate description based on your interpretation of the issue which adheres to your recommendations." \
          "Your response must be formatted with markdown, and have the bullet-point list in a collapsed section wrapped in a details tag." \
          "The summary tag should summarize in one sentence the most important suggestion you have." \
          "The alternate description should also be in a collapsed section wrapped in a details tag, but with the issue title in the summary tag." \
          "If you are able to detect any relationships in the original issue description of any reasonable complexity, try to create a mermaid diagram to illustrate it and place it at the end." \
          "" \
          "ISSUE TITLE: $ISSUE_TITLE" \
          "" \
          "ISSUE DESCRIPTION:" \
          "$ISSUE_DESCRIPTION")
          PAYLOAD=$(jq -n --arg model "gpt-4o" --arg content "$PROMPT" --argjson stream false --argjson max_tokens 500 '{
            model: $model,
            messages: [
              {
                role: "user",
                content: $content
              }
            ],
            stream: $stream,
            max_tokens: $max_tokens
          }')
          API_RESPONSE=$(curl -s -X POST -H "Content-Type: application/json" -H "User-Agent: GHAction/Issue-Critique" -H "api-key: $ZOO_API_KEY" -d "$PAYLOAD" https://llm.reasoning.innovation.kognitwin.com/proxy/chat/completions)
          MESSAGE=$(echo "$API_RESPONSE" | jq -r '.choices[0].message.content')
          echo "$MESSAGE" | gh issue comment "${{ github.event.issue.number }}" --repo "${{ github.repository }}" --body-file -
